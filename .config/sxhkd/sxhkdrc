set -U SXHKD_SHELL bash

#                           ╭────────────────────────╮
#                           │ wm independent hotkeys │
#                           ╰────────────────────────╯

# terminal emulator
super + Return
	tabbed -c -r 2 st -w ''
  # kitty

super +  KP_Enter
  kitty
  # tabbed -c -r 2 st -w ''

# browser
super + b
  librewolf

# emoji picker
super + shift + period
 	emoji-picker

# file manager
super + e
	st ranger

# program launcher
alt + @space
	dmenu_run -i -p Run -x 480 -y 370 -z 960

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# ocr
super + o
	scrot_ocr

# screenshot an area
ctrl + Print
	scrot_a

# screenshot a window
Print
	scrot_w

# screenshot whole desktop
super + Print
	scrot_d

# Power menu
ctrl + alt + Delete
	~/.local/bin/dmenu-power

# Kill a window
super + x
  xkill

# Color picker
super + alt + x
  colorpicker --one-shot --preview --short | xclip -selection "clipboard"

# color picker with super + shift + x

# Close exit screen when it's enabled.
# ~Escape
#     [[ -f "$HOME/.cache/eww-escreen.lock" ]] && sh $HOME/.config/eww/scripts/openExitScreen.sh




#                                ╭───────────────╮
#                                │ function keys │
#                                ╰───────────────╯


# Brightness controls
XF86MonBrightnessUp
	brightness_inc
XF86MonBrightnessDown
	brightness_dec

# Volume controls
XF86AudioRaiseVolume
	vol_inc
XF86AudioLowerVolume
	vol_dec
XF86AudioMute
	vol_mute

XF86RFKill
	fish "$(networkmanager_dmenu -p Network -x 480 -y 370 -z 960)"

#                                ╭───────────────╮
#                                │ bspwm hotkeys │
#                                ╰───────────────╯

# quit/restart bspwm
super + alt + r
	bspc wm -r

# close and kill
super + q
	bspc node -c
	# bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#                                 ╭─────────────╮
#                                 │ state/flags │
#                                 ╰─────────────╯

# set the window state
super + {t,shift + t,f,shift + f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}
bspc node -f next.local
#                                 ╭────────────╮
#                                 │ focus/swap │
#                                 ╰────────────╯

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }z
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + ctrl + {Left,Right}
	bspc desktop -f {prev,next}.local


# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#focus the next window in full screen mode
# super + z
#	 bspc node -f next.local

#focus the previous window in full screen mode
# super + ctrl + z
# 	bspc node -f prev.local


#                                  ╭───────────╮
#                                  │ preselect │
#                                  ╰───────────╯

# preselect the direction
super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel


#                                 ╭─────────────╮
#                                 │ move/resize │
#                                 ╰─────────────╯


# Expand/contract a window by moving one of its side outward/inward
# super + ctrl + {h,j,k,l}
#              bspc node -z {left -20 0 || bspc node -z right -20 0, \
#                            bottom 0 20 || bspc node -z top 0 20,\
#                            top 0 -20 || bspc node -z bottom 0 -20,\
#                            right 20 0 || bspc node -z left 20 0}

# super + ctrl + {h,j,k,l}
# { bspc node -z right +20 0 || bspc node -z left -20 0, \
#   bspc node -z top 0 +20   || bspc node -z bottom 0 -20, \
#   bspc node -z top 0 -20   || bspc node -z bottom 0 +20, \
#   bspc node -z right -20 0 || bspc node -z left +20 0}

super + ctrl +h
  ~/.config/sxhkd/expandx.sh
super + ctrl + j
  ~/.config/sxhkd/shrinky.sh
super + ctrl + k
  ~/.config/sxhkd/expandy.sh
super + ctrl + l
  ~/.config/sxhkd/shrinkx.sh


# # Shrink focused window.
# super + shift + {h,j,k,l}
# 	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
# super + shift + {Right,Up,Down,Left}
# 	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# # Expand focused window.
# super + alt + {h,j,k,l}
# 	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
# super + alt + {Right,Up,Down,Left}
# 	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}


#                                 ╭─────────────╮
#                                 │ scratchpads │
#                                 ╰─────────────╯


# scratchpad terminal
super + s
	scpad term

# bashtop
ctrl + shift + Escape
  scpad task_mgr btop

# clock
super + alt + c
	scpad clock "tty-clock -tbnc"

# pulsemixer
super + XF86AudioMute
	scpad pulse_term pulsemixer

# fetch
super + shift + i
	st -c fetch -e fetch

# notes
super + n
	scpad notes_term notes

# Calculator
super + c 
  scpad calc "qalc"
